class User < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[User, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def email: () -> String

    def email=: (String) -> String

    def email?: () -> bool

    def email_changed?: () -> bool

    def email_change: () -> [ String?, String? ]

    def email_will_change!: () -> void

    def email_was: () -> String?

    def email_previously_changed?: () -> bool

    def email_previous_change: () -> Array[String?]?

    def email_previously_was: () -> String?

    def email_before_last_save: () -> String?

    def email_change_to_be_saved: () -> Array[String?]?

    def email_in_database: () -> String?

    def saved_change_to_email: () -> Array[String?]?

    def saved_change_to_email?: () -> bool

    def will_save_change_to_email?: () -> bool

    def restore_email!: () -> void

    def clear_email_change: () -> void

    def password_digest: () -> String

    def password_digest=: (String) -> String

    def password_digest?: () -> bool

    def password_digest_changed?: () -> bool

    def password_digest_change: () -> [ String?, String? ]

    def password_digest_will_change!: () -> void

    def password_digest_was: () -> String?

    def password_digest_previously_changed?: () -> bool

    def password_digest_previous_change: () -> Array[String?]?

    def password_digest_previously_was: () -> String?

    def password_digest_before_last_save: () -> String?

    def password_digest_change_to_be_saved: () -> Array[String?]?

    def password_digest_in_database: () -> String?

    def saved_change_to_password_digest: () -> Array[String?]?

    def saved_change_to_password_digest?: () -> bool

    def will_save_change_to_password_digest?: () -> bool

    def restore_password_digest!: () -> void

    def clear_password_digest_change: () -> void

    def first_name: () -> String

    def first_name=: (String) -> String

    def first_name?: () -> bool

    def first_name_changed?: () -> bool

    def first_name_change: () -> [ String?, String? ]

    def first_name_will_change!: () -> void

    def first_name_was: () -> String?

    def first_name_previously_changed?: () -> bool

    def first_name_previous_change: () -> Array[String?]?

    def first_name_previously_was: () -> String?

    def first_name_before_last_save: () -> String?

    def first_name_change_to_be_saved: () -> Array[String?]?

    def first_name_in_database: () -> String?

    def saved_change_to_first_name: () -> Array[String?]?

    def saved_change_to_first_name?: () -> bool

    def will_save_change_to_first_name?: () -> bool

    def restore_first_name!: () -> void

    def clear_first_name_change: () -> void

    def last_name: () -> String

    def last_name=: (String) -> String

    def last_name?: () -> bool

    def last_name_changed?: () -> bool

    def last_name_change: () -> [ String?, String? ]

    def last_name_will_change!: () -> void

    def last_name_was: () -> String?

    def last_name_previously_changed?: () -> bool

    def last_name_previous_change: () -> Array[String?]?

    def last_name_previously_was: () -> String?

    def last_name_before_last_save: () -> String?

    def last_name_change_to_be_saved: () -> Array[String?]?

    def last_name_in_database: () -> String?

    def saved_change_to_last_name: () -> Array[String?]?

    def saved_change_to_last_name?: () -> bool

    def will_save_change_to_last_name?: () -> bool

    def restore_last_name!: () -> void

    def clear_last_name_change: () -> void

    def username: () -> String

    def username=: (String) -> String

    def username?: () -> bool

    def username_changed?: () -> bool

    def username_change: () -> [ String?, String? ]

    def username_will_change!: () -> void

    def username_was: () -> String?

    def username_previously_changed?: () -> bool

    def username_previous_change: () -> Array[String?]?

    def username_previously_was: () -> String?

    def username_before_last_save: () -> String?

    def username_change_to_be_saved: () -> Array[String?]?

    def username_in_database: () -> String?

    def saved_change_to_username: () -> Array[String?]?

    def saved_change_to_username?: () -> bool

    def will_save_change_to_username?: () -> bool

    def restore_username!: () -> void

    def clear_username_change: () -> void

    def postal_code: () -> String?

    def postal_code=: (String?) -> String?

    def postal_code?: () -> bool

    def postal_code_changed?: () -> bool

    def postal_code_change: () -> [ String?, String? ]

    def postal_code_will_change!: () -> void

    def postal_code_was: () -> String?

    def postal_code_previously_changed?: () -> bool

    def postal_code_previous_change: () -> Array[String?]?

    def postal_code_previously_was: () -> String?

    def postal_code_before_last_save: () -> String?

    def postal_code_change_to_be_saved: () -> Array[String?]?

    def postal_code_in_database: () -> String?

    def saved_change_to_postal_code: () -> Array[String?]?

    def saved_change_to_postal_code?: () -> bool

    def will_save_change_to_postal_code?: () -> bool

    def restore_postal_code!: () -> void

    def clear_postal_code_change: () -> void

    def address: () -> String?

    def address=: (String?) -> String?

    def address?: () -> bool

    def address_changed?: () -> bool

    def address_change: () -> [ String?, String? ]

    def address_will_change!: () -> void

    def address_was: () -> String?

    def address_previously_changed?: () -> bool

    def address_previous_change: () -> Array[String?]?

    def address_previously_was: () -> String?

    def address_before_last_save: () -> String?

    def address_change_to_be_saved: () -> Array[String?]?

    def address_in_database: () -> String?

    def saved_change_to_address: () -> Array[String?]?

    def saved_change_to_address?: () -> bool

    def will_save_change_to_address?: () -> bool

    def restore_address!: () -> void

    def clear_address_change: () -> void

    def phone: () -> String?

    def phone=: (String?) -> String?

    def phone?: () -> bool

    def phone_changed?: () -> bool

    def phone_change: () -> [ String?, String? ]

    def phone_will_change!: () -> void

    def phone_was: () -> String?

    def phone_previously_changed?: () -> bool

    def phone_previous_change: () -> Array[String?]?

    def phone_previously_was: () -> String?

    def phone_before_last_save: () -> String?

    def phone_change_to_be_saved: () -> Array[String?]?

    def phone_in_database: () -> String?

    def saved_change_to_phone: () -> Array[String?]?

    def saved_change_to_phone?: () -> bool

    def will_save_change_to_phone?: () -> bool

    def restore_phone!: () -> void

    def clear_phone_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods
  module ActiveModel_SecurePassword_InstanceMethodsOnActivation_password
    attr_reader password: String?

    def password=: (String) -> String

    def password_confirmation=: (String) -> String

    def authenticate_password: (String) -> (User | false)

    alias authenticate authenticate_password
  end
  include ActiveModel_SecurePassword_InstanceMethodsOnActivation_password

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[User, Integer]
    include Enumerable[User]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[User, Integer]
  end
end
